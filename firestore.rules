
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read the list of users
      allow read: if request.auth != null;

      // Only the user themselves or an admin can write to a user document.
      // Admin can only update 'hasUnreadAdminMessages'
      allow write: if request.auth.uid == userId ||
                      (isAdmin(request.auth.uid) && request.resource.data.keys().hasOnly(['hasUnreadAdminMessages']));

      // Subcollections for each user
      match /{subcollection}/{docId} {
        // Users can only read/write their own subcollections
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Rules for 'chats' collection (user-to-admin)
    match /chats/{userId}/{messageId} {
        // A user can read/write their own chat messages.
        // An admin can read/write any user's chat messages.
        allow read, write: if request.auth.uid == userId || isAdmin(request.auth.uid);
    }
    
    // Rules for 'groupChats' collection
    match /groupChats/{groupId} {
        // Allow read/write only if the user is in the members array of the group document.
        allow read, write: if request.auth.uid in resource.data.members;
        
        match /messages/{messageId} {
            // Allow read/write only if the user is in the members array of the parent group document.
            allow read, write: if request.auth.uid in get(/databases/$(database)/documents/groupChats/$(groupId)).data.members;
        }
    }
  }
}
